---
layout: post
title:  "2 编码、加密、Hash、序列化和字符集"
date:   2018-10-12 09:15:00 +0800
categories: HenCoder
tags: HenCoder_plus
author: pepe
description: 『 编码、加密、Hash、序列化和字符集 』
---

### 加密

* 木棒

* 替换

### 对称加密

* DES(秘钥太短，已经弃用)

* AES

* 特点：只有一个秘钥。

原文 + 秘钥，配合加密算法 = 密文

密文 + 秘钥，配合解密算法 = 原文

简单来说就是；

* 加密：A + 10 = K，10就是秘钥，加密算法是：原文 + 秘钥

* 解密：k - 10 = A，解密算法是：密文 - 秘钥


最有算法：只能在可能的范围内，穷举

破解：先拿到一组原文密文对，然后使用(试错)秘钥，对密文进行还原，如能还原成原文，那么破解成功。

### 非对称加密

> 非对称加密：公钥(加密秘钥)加密，私钥(解密秘钥)解密。利用溢出，来实现加密算法的一致。

原文 + 公钥，配合加密算法 = 密文

密文 + 私钥，配合加密算法 = 原文

关键点就是要保护好私钥。

简单来说就是；

* 加密：A + 25 = Z，25就是公钥，加密算法是：原文 + 公钥

* 解密：Z + 1  = A，1 就是私钥，解密算法是：密文 + 私钥，利用溢出。

公钥能解开私钥吗？

* 加密：A + 1  = B，1 就是私钥，加密算法是：原文 + 私钥

* 解密：B + 25 = A，25就是公钥，解密算法是：密文 + 公钥，利用溢出。

所以是可以的。公钥有时候可以被计算出来，所以不能换。转换上有对等关系，但有时候公钥是通过私钥算出来的。

经典算法：RSA(用于加密解密和签名验证都可以)、DSA(专门用来设计签名，速度有优势)

破解：不需要原文密文对，只使用(试错)私钥，对公钥进行破解，即可。破解私钥就行了，公钥是公开的，原文密文对都可以自己造。

### 数字签名(非对称加密的应用)

原数据   + 私钥，配合加密算法 = 签名数据

签名数据 + 公钥，配合加密算法 = 原数据

签名数据没有私钥是没法伪造的。用于签名和验证。

### 加密 + 签名

![2_1]({{ site.baseurl }}/assets/images/Hencoder/hencoder2_1.png)





