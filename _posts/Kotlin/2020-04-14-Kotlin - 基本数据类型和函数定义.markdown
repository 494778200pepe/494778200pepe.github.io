---
layout: post
title:  "Kotlin - 基本数据类型和函数定义"
date:   2020-04-14 13:44:00 +0800
categories: Kotlin
tags: Kotlin
author: pepe
description: 『 基本数据类型和函数定义 』
---

### 基本数据类型
val/var 变量名：类型 = xxx
val/var 变量名 = xxx        
```
// 定义 ： val/var 变量名：类型 = xxx        
/*val number:Int = 12        
val str:String = "str"        
val bool:Boolean = true        
val char:Char='D'        
var float:Float = 12f        
var double:Double = 12.0*/  
      
// 自动推倒类型        
val number = 12        
val str = "str"        
val bool = true        
val char='D'        
var float = 12f        
var double = 12.0
```

### var 和 val

* val : 定义的变量是不可修改的（类似于Java中的final）
* var: 定义的变量是可以修改的

```
java 里面的 final ：不可修改，编译的时候会把引用的值进行 copy
比如：
	private final  String str = "haha";
	private String str1 = str;
	那么编译之后，str1 并不是指向 str，而是直接 = "haha";等同于：
	private String str1 = "haha";


val ：不可修改,仍然是引用，只是不能修改。

如果希望能和 final 一样：
const val ：相当于 Java中的final ，编译时常量。
```

### 函数的定义

fun 函数名称（参数名1：参数类型）: 返回值 
默认返回值是 ：`Unit ，可以省略`
```
// 定义一个打印 Log 的函数
fun e(message:String):Unit{    
	Log.e(TAG,message)
}

// 两个数相加
fun add(number1:Int,number2:Int):Int{    
	return number1+number2
}
简化版：
fun add(number1:Int,number2:Int) = number1 + number2
```


### 函数变量
函数变量的定义：

```
// 在 kotlin 里面函数是可以作为变量的，函数可以作为参数传递

val minus = fun(number1:Int,number2:Int):Int{    
	return number1 - number2;
}
```














