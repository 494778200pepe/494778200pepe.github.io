---
layout: post
title:  "小程序 - 主流css布局"
date:   2020-05-18 10:21:00 +0800
categories: Wechat
tags: 小程序
author: pepe
description: 『 主流css布局 』
---

### 水平居中布局
方式一：
父级元素：text-align:center
子级元素：display：inline-block

优点：兼容性好
缺点：text-align 具有继承性，导致子级元素的文本也是居中显示。解决办法就是子级元素重写`text-align`属性。

#### **block，inline和inlinke-block细节对比**

* display:block
	
	。1.block元素会独占一行，多个block元素会各自新起一行。默认情况下，block元素宽度自动填满其父元素宽度。

	。2.block元素可以设置width,height属性。块级元素即使设置了宽度,仍然是独占一行。

	。3.block元素可以设置margin和padding属性。

* display:inline
	。1.inline元素不会独占一行，多个相邻的行内元素会排列在同一行里，直到一行排列不下，才会新换一行，其宽度随元素的内容而变化
	。2.inline元素设置width,height属性无效。
	。3.inline元素的margin和padding属性，水平方向的padding-left, padding-right, margin-left, margin-right都产生边距效果；但竖直方向的padding-top, padding-bottom, margin-top, margin-bottom不会产生边距效果。

* display:inline-block
	。1.简单来说就是将对象呈现为inline对象，但是对象的内容作为block对象呈现。之后的内联对象会被排列在同一行内。比如我们可以给一个link（a元素）inline-block属性值，使其既具有block的宽度高度特性又具有inline的同行特性。

方式二：
子级元素：	display：table/block;
			margin:0 auto;

auto：表示根据浏览器自动分配
优点：只需要对子级元素进行设置就可以实现
缺点：如果子级元素脱离文档流，导致 margin 属性的值无效

脱离文档流的方式：float，absolute，固定定位（position）
			
#### **margin属性**
一个值：上下左右
二个值：上下，左右
三个值：上，左右，下
四个值：上，右，下，左

方式三：
父级元素：position：relative/fixed/relative; // 三个里面，只有 relative 是不脱离文档流的
子级元素：position:absolute;
			left:50%;
			transform:translateX(-50%);

说明：
position：absolute;
把当前元素设置为绝对定位后：
	如果父级元素没有开启定位的话，当前元素是相对于页面定位的
	如果父级元素开启了定位的话，当前元素是相对于父级元素的

优点：无论父级元素是否脱离文档流，不影响子级元素水平居中效果
缺点：transform 属性是css3中新增属性，浏览器支持情况不好


### 垂直居中布局

方式一：
父级元素：display：table-cell; 	// table:设置当前元素为<table>元素 
								// table-cell：设置当前元素为<td>元素（单元格）
			vertical-align：middle; // 用来设置文本内容的垂直对齐方向,top,middle,botton
			
子元素相当于单元格里面的内容

优点：浏览器兼容性比较好
缺点：vertical-align 属性具有继承性，导致父级元素的文本也是居中显示的

方式二：
父级元素：position：relative/fixed/relative; // 三个里面，只有 relative 是不脱离文档流的
子级元素：position:absolute;
			top:50%;
			transform:translateY(-50%);

### 居中布局
方式一：
父级元素：display：table-cell; 	// 相当于 td
			vertical-align：middle;
子级元素：	display：table/block;  // 如果是 table，td 应该是在 table 里面的，建议使用 block
			margin:0 auto;
			
方式二：
父级元素：position：relative/fixed/relative; // 三个里面，只有 relative 是不脱离文档流的
子级元素：position:absolute;
			top:50%;
			left:50%
			transform:translate(-50%,-50%);
	
多列布局的分类：两列布局，三列布局，圣杯布局和双飞翼布局，等分布局，等高布局，CSS3多列布局	
### 两列布局
方式一：float + margin 属性配合使用
left：float：left；// 当前元素脱离文档流
right：margin-left：100px；

优点：实现方式简单
缺点：自适应元素 margin 属性值与定宽元素的 width 值保持一致
		定宽元素浮动与自适应元素不浮动导致浏览器兼容性不好
		
方式一优化版：为右边元素增加父布局
right-fix：float：right；
			width：100%；
			margin-left:-100px；
		


方式二：float + overflow 属性配合使用
方式三：display 属性的 table 相关值使用






























