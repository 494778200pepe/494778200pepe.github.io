---
layout: post
title:  "静态成员变量和成员函数"
date:   2018-06-21 19:23:00 +0800
categories: C++
tags: 黑马C++
author: pepe
description: 『 静态成员变量和成员函数 』
---

> 在C++中，静态成员是属于整个类的而不是某个对象，静态成员变量只存储一份供所有对象共用。所以在所有对象中都可以共享它。使用静态成员变量实现多个对象之间的数据共享同时不会破坏隐藏的原则，保证了安全性还可以节省内存。类的静态成员，属于类，也属于对象，但终归属于类。

### **静态成员变量**
```
// 声明
static 数据类型 成员变量；               // 在类的内部

// 初始化
数据类型 类名::静态成员变量 = 初始值；   // 在类的外部

// 调用
类名::静态成员变量
类对象.静态成员变量

```

* 1、static 成员变量实现了同类对象间信息共享。
* 2、static 成员，在类外存储，求类大小，并不包含在内。
* 3、static 成员是命名空间属于类的全局变量，存储在data区。
* 4、static 成员只能类外初始化。
* 5、可以通过类名访问(无对象生成时亦可)，也可以通过对象访问。  
  
```
#include <iostream>
using namespace std;

class Box
{
public:
    Box(int l,int w):lenght(l),width(w)
    {        
    }
    int volume()
    {
        return lenght*width*height;
    }
    static int height;
    int length;
    int width;
}

int Box::height = 5;
```
  
### **静态成员函数**   
```
// 声明
static 函数声明

// 实现
// 可以在类内部，也可以在类外部

// 调用
类名::函数调用
类对象.函数调用

```

* 1、静态成员函数的意义，不在于信息共享，数据沟通，而在于管理静态数据成员，完成对静态数据成员的封装。
* 2、`静态成员函数只能访问静态数据成员。`原因：非静态成员函数，在调用是this指针被当作参数传进。而静态成员函数属于类，而不属于对象，没有this指针。

### 编译器对属性和方法的处理机制
    
#### 静态成员占多大
```
#include <iostream>
using namespace std;

class C1
{
public:
	int i;
	int j;
	int k;
};
class C2
{
public:
	int i;
	int j;
	int k;
	static int m;
	int getK() const
	{
		return k;
	}
	void setK(int val)
	{
		k = val;
	}
};

struct S1
{
	int i;
	int j;
	int k;
};

struct S2
{
	int i;
	int j;
	int k;
	static int m;
};
int main()
{
	cout << "c1 :" << sizeof(C1) << endl;
	cout << "c2 :" << sizeof(C2) << endl;
	cout << "S1 :" << sizeof(S1) << endl;
	cout << "S2 :" << sizeof(S2) << endl;
	
	system( "PAUSE "); 
	return 0;
}
``` 

### 处理机制

* 1、C++类对象中的成员变量和成员函数是分开存储的。
* 2、普通成员变量：存储于对象中，与struct变量有相同的内存布局和字节对齐方式。
* 3、静态成员变量：存储于全局数据区中。
* 4、成员函数：存储于代码段中。 
    
> 很多对象共用一块代码？代码是如何区分具体对象的呢？换句话说:`int getK() const { return k;}`，代码是如何区分，具体的obj1、obj2、obj3对象的k值？

C++编译器对类的成员的内部处理机制类似如下：

![field_mechanism]({{ site.baseurl }}/assets/images/C++/heima/field_mechanism.png)

* 1、C++类对象中的成员变量和成员函数是分开存储的。C语言中的内存四区模型依然有效。
* 2、C++中类的普通成员都隐式包含一个指向当前对象的this指针。
* 3、 静态成员函数、静态成员变量 属于类
* 4、静态成员函数与普通成员函数的区别
    
    。 静态成员函数不包含指向具体对象的指针
    。 普通成员函数包含一个指向具体对象的指针
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    












