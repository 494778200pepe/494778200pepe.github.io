---
layout: post
title:  "静态成员变量和成员函数"
date:   2018-06-21 19:23:00 +0800
categories: C++
tags: 黑马C++
author: pepe
description: 『 静态成员变量和成员函数 』
---

> 在C++中，静态成员是属于整个类的而不是某个对象，静态成员变量只存储一份供所有对象共用。所以在所有对象中都可以共享它。使用静态成员变量实现多个对象之间的数据共享同时不会破坏隐藏的原则，保证了安全性还可以节省内存。类的静态成员，属于类，也属于对象，但终归属于类。

### **静态成员变量**
```
// 声明
static 数据类型 成员变量；               // 在类的内部

// 初始化
数据类型 类名::静态成员变量 = 初始值；   // 在类的外部

// 调用
类名::静态成员变量
类对象.静态成员变量

```

* 1、static 成员变量实现了同类对象间信息共享。
* 2、static 成员，在类外存储，求类大小，并不包含在内。
* 3、static 成员是命名空间属于类的全局变量，存储在data区。
* 4、static 成员只能类外初始化。
* 5、可以通过类名访问(无对象生成时亦可)，也可以通过对象访问。  
    
### **静态成员函数**   
```
// 声明
static 函数声明

// 实现
// 可以在类内部，也可以在类外部

// 调用
类名::函数调用
类对象.函数调用

```

* 1、静态成员函数的意义，不在于信息共享，数据沟通，而在于管理静态数据成员，完成对静态数据成员的封装。
* 2、`静态成员函数只能访问静态数据成员。`原因：非静态成员函数，在调用是this指针被当作参数传进。而静态成员函数属于类，而不属于对象，没有this指针。

### 编译器对属性和方法的处理机制
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    












