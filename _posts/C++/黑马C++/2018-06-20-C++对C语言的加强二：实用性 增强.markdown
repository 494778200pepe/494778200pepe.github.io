---
layout: post
title:  "C++对C语言的加强一：实用性 增强"
date:   2018-06-20 11:04:00 +0800
categories: C++
tags: 黑马C++
author: pepe
description: 『 C++对C语言的加强一：实用性 增强 』
---

### 实用性增强

* C语言中的变量都必须在作用域开始的位置定义！！「也就是程序的开始处，主要是针对老的编译器」
* C++中更强调语言的“实用性”，所有的变量都可以在需要使用时再定义。

### 变量检测增强

* C语言中，重复定义多个同名的全局变量是合法的。
* C++中，不允许定义多个同名的全局变量
* C语言中多个同名的全局变量最终会被链接到全局数据区的同一个地址空间上
```
int g_gar;//定义变量
int g_gar = 1;//变量赋值
```
* C++直接拒接这种二义性的做法。「会报“重定义”的错误」

### struct类型增强

* C语言中struct定义了一组变量的集合，C编译器并不认为这是一种新的类型。「定义变量时，必须要加struct」
* C++中的struct是一个新类型的定义声明。

### C++中所有变量和函数都必须有类型

* C++中所有的变量和函数都必须有类型。
* C语言的默认类型在C++中是不合法的。
* 函数f的返回值是什么类型，参数又是什么类型?
```
f(i){//默认返回是int类型
    printf("i = %d\n",i);
}
```
* 函数g可以接受多少个参数?
```
g(int n){//可以接受多个参数，但无意义
    return 5;
}
```

C语言中

    * int f();表示返回值为int，接受任意参数的函数
    * int f(void);表示返回值为int的无参函数
    
C++中

    * int f();和int f(void);具有相同的意义，都表示返回值为int的无参函数。
    
> C++更加强调类型，任意的程序元素都必须显式指明类型。

### 新增bool类型关键字

* bool类型只有true(非0)和false(0)两个值
* C++编译器会在赋值时将非0值转换为true，0值转换为false

### 三目运算符功能增强

* C语言返回变量额值，不能作为左值使用。
* C++可直接返回变量本身，因此可以出现在程序的任何地方，可以坐左值使用。
* 注意：三目运算符返回的值如果是一个常量值，则不能作左值。
* C语言是如何支持类似C++的特性呢？当左值的条件：要有内存空间。
* C++编译器帮程序员取了一个地址而已。
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    














