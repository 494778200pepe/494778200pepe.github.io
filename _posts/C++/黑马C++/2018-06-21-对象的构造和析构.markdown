---
layout: post
title:  "对象的构造和析构"
date:   2018-06-21 18:14:00 +0800
categories: C++
tags: 黑马C++
author: pepe
description: 『 对象的构造和析构 』
---

### 函数构造

> C++中的类可以定义与类名相同的特殊成员函数，这种与类名相同的成员函数叫做构造函数。

#### 调用

* `自动调用`：一般情况下C++编译器会自动调用构造函数。
    
    。 在对象创建时自动调用，完成初始化相关工作。
    。 无返回值，与类名同，默认无参，可以重载，可默认参数。
    。 一经实现，默认不复存在。
    
* `手动调用`：在一些情况下则需要手动调用构造函数。

#### 分类

* 1、无参构造函数：`Test t;`
* 2、有参构造函数：`Test t(10);`
* 3、拷贝构造函数：由已存在的对象，创建新对象。也就是说新对象，不由构造器来构造，而是由拷贝构造器来完成。拷贝构造器的格式是固定的。

```
#include <iostream>
using namespace std;

class Test
{
    public:
        Test()
        {
            cout << "无参构造函数" << endl;        
        }
        Test(int a)
        {
            m_a = a;
            cout << "无参构造函数" << endl;     
        }
        Test(const Test &anthor_obj)
        {
            m_a = anthor_obj.m_a;
            cout << "拷贝构造函数" << endl;  
        }
        ~Test()
        {
            cout << "析构函数，自动被调用" << endl;
        }
        private:
            int m_a;
}
```

拷贝构造函数的应用场景：

* 1、`Test t2 = t1; // 用对象t1 初始化 对象 t2`
* 2、`Test t2(t1); // 用对象t1 初始化 对象 t2`
* 3、Test作为实参用来初始化形参p时，会调用copy构造函数
* 4、Test作为一个函数返回值时，会返回一个匿名的对象(所以会调用匿名对象类的copy构造函数)

    。关于匿名对象的去留
    。如果用匿名对象 `初始化` 另外一个同类型的对象，匿名对象 转成有名对象
    。这里的初始化包括`Test t2 = t1;`和`Test t2(t1);`
    。如果用匿名对象 `赋值给` 另外一个同类型的对象，匿名对象 被析构


### 析构函数

> 定义：C++中的类可以定义一个特殊的成员函数，用来清理对象，这个特殊的成员函数叫做析构函数。

规则：

* 1、对象销毁时，自动调用。完成销毁的善后工作。
* 2、无返回值，与类同名。无参。不可以重载与默认参数。
* 3、析构函数的作用，并不是删除对象，而是在对象销毁前完成一些清理工作。





    
    
    
    
    


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    












