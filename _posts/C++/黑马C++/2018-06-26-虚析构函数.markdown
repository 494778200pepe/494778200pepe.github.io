---
layout: post
title:  "虚析构函数"
date:   2018-06-26 11:35:00 +0800
categories: C++
tags: 黑马C++
author: pepe
description: 『 虚析构函数 』
---

* 构造函数不能是虚函数。建立一个派生类对象时，必须从类层次的根开始，沿着继承路径逐个调用基类的构造函数。
* 析构函数可以是虚的。虚析构函数用于指引delete运算符正确析构动态对象。
* 说白了，就是析构子类对象的时候，形参是基类，实参是子类，让执行子类的析构函数。
    
```
#include <iostream>
using namespace std;

class A
{
public:
    A()
    {
        p = new char[20];
        strcpy(p,"obja");
        printf("A()\n");
    }
    virtual ~A()
    {
        delete[] p;
        printf("~A()\n");
    }
private:
    char *p;
};

class B:public A
{
public:
    B()
    {
        p = new char[20];
        strcpy(p,"objb");
        printf("B()\n");
    }
    ~B()
    {
        delete[] p;
        printf("~B()\n");
    }
private:
    char *p;
};

class C:public B
{
public:
    C()
    {
        p = new char[20];
        strcpy(p,"objc");
        printf("C()\n");
    }
    ~C()
    {
        delete[] p;
        printf("~C()\n");
    }
private:
    char *p;
};

// 通过父类指针 释放所有的子类资源
void howtodelete(A *base)
{
    delete base;
}

int main()
{
    C *myC = new C;
    
    // delete myC; // 直接通过子类对象释放资源 不需要写virtual
    
    howtodelete(myC);// 通过父类的指针调用释放子类的资源
    
    return 0;
}
```

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    












