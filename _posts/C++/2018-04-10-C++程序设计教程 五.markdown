---
layout: post
title:  "C++程序设计教程 五"
date:   2018-04-10 15:25:00 +0800
categories: C++
tags: C++程序设计教程
author: pepe
description: 函数
---

### 一：**程序的内存区域**

* 1、代码区：存放程序的代码，即程序中的各个函数代码块。
* 2、全局数据区：存放程序的全局数据和静态数据。
* 3、堆区：存放程序的动态数据。
* 4、栈区：存放程序的局部数据，即各个函数中的数据。

[C++内存分配方式详解(堆、栈、自由存储区、全局/静态存储区和常量存储区)](https://blog.csdn.net/duan19920101/article/details/50989431)

### 二：**内联函数**

* 1、内联函数，主要用于解决程序的运行效率。(函数调用需要建立栈内存环境，进行参数传递，并产生程序执行转移，都需要开销)
* 2、内联函数的原理是 用函数内的代码 替换 函数。
* 3、内联函数适合 适合使用频率高，但代码很短的代码片段。通过函数的方式来体现其结构化和可读性，又要使效率尽可能高。
* 4、必须先声明，后调用，且声明和函数实现两处均需`inline`关键字。
* 5、内联函数中，不能有复杂的结构控制语句，如`switch`和`while`。
* 6、递归函数也是不行的。
* 7、有些函数尽管可以用宏定义`#define`来代替，但容易出问题。

```
#define MAX(a,b) ((a)>(b)?(a):(b))

int a = 1,b = 0;
MAX(a++,b);         //a被+了两次
MAX(a++,b + 10);    //a被+了一次
MAX(a,"hello");     //错误的比较int和字符串
```

### 三：**函数的默认参数**

* 1、默认参数只可在函数声明或者定义中设定一次。
* 2、优先在声明时设定。只有在没有函数声明时，才可以在函数定义中设定。
* 3、具有多个参数的函数中指定默认值时,默认参数都必须出现在不默认参数的右边,一旦某个参数开始指定默认值,它右边的所有参数都必须指定默认值.

```
int f (int i1, int i2 = 2, int i3 = 3);     // 正确
int g (int i1, int i2 = 2, int i3);         // 错误, i3未指定默认值
int h (int i1 = 1, int i2, int i3 = 3);     // 错误, i2未指定默认值
```
* 4、在调用具有默认参数的函数时, 若某个实参默认,其右边的所有实参都应该默认。

```
//例如, 一个函数声明如下
int f(int i1 = 1, int i2 =2, int i3 = 3);

//调用函数 f()
f();             //正确, i1=1, i2=2, i3=3
f(3);            //正确, i1=3, i2=2, i3=3
f(2, 3);         //正确, i1=2, i2=3, i3=3
f(4, 5, 6);      //正确, i1=4, i2=5, i3=6
f(, 2, 3);       //错误, i1默认,其右边的i2和i3没有默认
```

* 5、参数默认值可以是全局变量、全局常量，甚至是一个函数。 
                                                                               
```
int a = 1;
int fun(int);

int g(int x = fun(a));      //ok:允许默认值为函数
```
* 6、参数默认值不允许是局部变量，因为默认参数的函数调用是在编译时确定的，而局部变量的位置与值在编译时均无法确定。

















