---
layout: post
title:  "性能优化"
date:   2019-08-26 22:00:00 +0800
categories: Android
tags: 性能优化
author: pepe
description: 『 性能优化 』
---


性能优化的方面：

* [启动优化](https://494778200pepe.github.io/android/2019/08/26/启动优化.html)

* [内存优化](https://494778200pepe.github.io/android/2019/09/15/内存优化.html)

* [布局优化](https://494778200pepe.github.io/android/2019/09/16/布局优化.html)

* 卡顿优化

* 线程优化

* 网络优化

* 电量优化

* 瘦身优化

* 稳定优化

* 专项技术优化




### **性能优化的难题**

* 1、性能表现差

    。 App 启动慢、卡顿、丢帧
    。 内存占用高、抖动频繁
    。 耗电、网络请求慢
    。 崩溃率、异常率高
    
* 2、线上问题无从追查

    。 如何保证异常感知灵敏度
    。 如何复原“案发”现场
    。 如何快速“止血”成功

* 3、性能优化的长期开销大

    。 如何扼杀问题于萌芽
    。 优化效果如何长期保持
    
总结，对性能优化工作的要求：

* 1、性能表现好

* 2、线上问题易追查

* 3、长期投入小

### **App性能优化解决方案演进**

* 项目初期
    
    。 只关心崩溃率、不采集性能数据
    。 没有性能检测、优化方案
    。 没有排查问题手段

* 项目壮大期
        
    。 指标采集，不够全面深入
    。 接入成熟APM，排查手段单一
    。 线下检测、优化，方案不成型
    
* 项目成熟期

    。 重点关注性能问题，数据丰富，手段多样化
    。 线上、线下一整套完善解决方案(重点)
    。 自检APM，新产品可快速接入

### **线上线下**

* 误区：对线上不重视(线上可能用户会连续使用50分钟...)
* 侧重点：线下预防、线上监控
* 方案不同：线下可用黑科技

### **为什么要自建APM**

* 成熟 APM 通用，但不满足个性化需求(启动分阶段app、activity)
* 外部 APM 与内部系统难打通，带来的时间成本(浏览途径、行为日志在内部系统当中)
* 数据必须掌握在自己手中


### **Crash收集平台**

* Bugly 为代表

    。 数据采集、上报成功率高
    。 包含Java、Native崩溃
    。 建议项目初期接入

### **APM平台**

* 听云为代表

    。 通用的性能解决方案，数据采集完善
    。 方便接入，但不满足个性化需求，数据隐患
    。 建议性能方案不完善的阶段接入
    
### **自检解决方案**

* 美团、携程、360等

    。 贴合自身业务特点，满足定制化需求
    。 数据安全



    
参考：

Deep into Android
https://jsonchao.github.io/

Category: Android:Performance - 胡凯
http://hukai.me/blog/categories/android-performance/

Android性能优化—TraceView的使用 - 简书
https://www.jianshu.com/p/7e9ca2c73c97

Android 性能监控系列一（原理篇） - BaronZhang - 博客园
https://www.cnblogs.com/baronzhang/p/9140074.html

Android优化总结 - 简书
https://www.jianshu.com/p/db56a3c52856

性能优化_chenliguan的博客_陈李冠-CSDN博客
https://blog.csdn.net/chenliguan/category_6517156.html

「置顶」Android 性能优化必知必会 · Android Performance
https://www.androidperformance.com/2018/05/07/Android-performance-optimization-skills-and-tools/








