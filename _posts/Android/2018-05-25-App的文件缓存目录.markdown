---
layout: post
title:  "App的文件缓存目录"
date:   2018-05-25 13:53:00 +0800
categories: Android
tags: Android
author: pepe
description: 『 App的文件缓存目录 』
---

### **内置私有目录**

* `/data/data/[packagename]/shared_prefs/`
用来存储 SharedPreference，对应函数为：`getSharedPreferences(String fileName, int mode)`；

* `/data/data/[packagename]/databases/`
用来存储数据库 DB，相关函数还有 `getDatabasePath()`；

* `/data/data/[packagename]/app_webview` 和 `/data/data/[packagename]/xxxwebviewcachexxx`
来存储应用内置 webview 所产生的 cache 和 cookies 等，该目录由于 android 版本不同名字和位置也可能不同；

* `/data/data/[packagename]/lib`
用来存储该应用的 .so 静态库文件；

* `/data/data/[packagename]/cache`
该目录可以使用函数 `getCacheDir()` 获取；

* `/data/data/[packagename]/files`
该目录可以使用函数 `getFilesDir()` 获取，`openFileInput()` 和 `openFileOutput()` 函数也是在该目录下操作文件，`fileList()` 函数是用来列出该 files 目录下的所有文件，`deleteFile(String name)` 用来删除该 files 目录下的文件；

* `/data/data/[packagename]/XXXX`
这个目录下面当然也能够创建子集的目录，使用的方法就是 `getDir(String name, int mode)`，参数中的 name 就是需要在该目录下创建的子目录名字，子目录名字为 `app_name`。

```
getDatabasePath("student.db")               /data/user/0/com.hopechart.test/databases/student.db
getCacheDir()                               /data/user/0/com.hopechart.test/cache
getFilesDir()                               /data/user/0/com.hopechart.test/files
getDir("zhao")                              /data/user/0/com.hopechart.test/app_zhao
getPackageCodePath()                        /data/app/com.hopechart.test-1/base.apk
getPackageResourcePath()                    /data/app/com.hopechart.test-1/base.apk
```

### **SD卡私有目录**

> 该目录下的文件卸载应用之后会自动删除。

#### `/sdcard/Android/data/package_name/`

对应为 `/sdcard/Android/data/com.hopechart.test/`。

* `Android/data/com.android.framework/files/`
该目录可用 `getExternalFilesDir(String type)` 和 `getExternalFilesDirs(String type)` 获取，参数 type 为子目录名字，null 则为根目录，后者调用之后会自动生成该目录，并且后者返回的是一个数组，如果插入外置存储卡，外置存储卡目录也会一并返回，具体区别可以查看后面的源码和结果；
* `Android/data/com.android.framework/cache/`
该目录可用 `getExternalCacheDir()` 和 `getExternalCacheDirs() `获取，后者调用之后自动生成该目录，和上面一样，后者返回的是一个数组，如果插入外置存储卡，外置存储卡目录也会一并返回，具体区别可以查看后面的源码和结果。

```
        Log.d("pepe","getExternalFilesDir():" + getExternalFilesDir(null));
        File[] paths = getExternalFilesDirs(null);
        for (File path : paths){
            Log.d("pepe","getExternalFilesDirs():---" + path.getPath());
        }
        
        Log.d("pepe","getExternalCacheDir():" + getExternalCacheDir());
        paths = getExternalCacheDirs();
        for (File path : paths){
            Log.d("pepe","getExternalCacheDirs():---" + path.getPath());
        }
getExternalFilesDir()           /storage/emulated/0/Android/data/com.hopechart.test/files
getExternalFilesDirs()          /storage/emulated/0/Android/data/com.hopechart.test/files
getExternalFilesDirs()          /storage/0C0A-C469/Android/data/com.hopechart.test/files
getExternalCacheDir()           /storage/emulated/0/Android/data/com.hopechart.test/cache
getExternalCacheDirs()          /storage/emulated/0/Android/data/com.hopechart.test/cache
getExternalCacheDirs()          /storage/0C0A-C469/Android/data/com.hopechart.test/cache
```

#### `/sdcard/Android/obb/package_name/`

对应为 `/sdcard/Android/obb/com.android.framework/`。 

需要注意的是，obb 目录也可能不存在，原文：`Note if the application does not have any OBB files, this directory may not exist`，
一般游戏 APP 会将游戏相关的数据包放到这个目录下。 
该目录的的相关函数简单只有两个：`getObbDirs()` 和 `getObbDir()`，前者调用之后会自动生成该目录，
后者在插入外置存储卡之后会在前者的基础上另外返回外置存储卡的 obb 目录，具体的结果可以查看后面的源码和结果。

```
        Log.d("pepe","getObbDir():" + getObbDir());
        paths = getObbDirs();
        for (File path : paths){
            Log.d("pepe","getObbDirs():---" + path.getPath());
        }
getObbDir()                     /storage/emulated/0/Android/obb/com.hopechart.test
getObbDirs()                    /storage/emulated/0/Android/obb/com.hopechart.test
getObbDirs()                    /storage/0C0A-C469/Android/obb/com.hopechart.test
```

### **SD卡公有目录**

该目录下的文件卸载应用之后还会留存，所以为了 SD 卡的整洁度，不要随便在 SD 卡的根目录下面创建文件，最好以应用名字创建一个目录，所有的需要卸载之后留存或者需要给其他应用共享的文件都放到该目录下，不要在根目录下创建文件。

* `Environment.getExternalStorageState()`
这个函数用来获取 SD 卡的挂载状态，如果传入参数 path 则是获取该路径的的挂载状态，比如这个目录被用户的 PC 挂载，或者从设备中移除，或者其他问题发生，状态的返回是不一样的；
* `Environment.getExternalStorageDirectory()`
该函数用来返回 SD 卡的根目录，即 /storage/emulated/0，注意不要在根目录下创建文件，强烈建立创建一个子目录去操作，要不然会污染 SD 卡的主目录，该目录所有应用都可操作，为共享目录；
* `Environment.getDownloadCacheDirectory()`
该函数用来返回 SD 卡下面的下载缓存目录；
* `Environment.getDataDirectory()`
该函数用来获取用户的数据目录；
* `Environment.getExternalStoragePublicDirectory(String type)`
该函数用来根据类型返回相关目录，类型为 Environment 的一些变量，传入的类型参数不能是 null，返回的目录路径有可能不存在，所以必须在使用之前确认一下，没有就创建该目录；
* `Environment.getRootDirectory()`
该函数用来返回根 System 目录，只挂载为只读;

```
Environment.getDataDirectory();                 /data
Environment.getExternalStorageState()           mounted
Environment.getExternalStorageDirectory()       /storage/emulated/0
Environment.getDownloadCacheDirectory()         /data/cache
Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC)          /storage/emulated/0/Music
Environment.getRootDirectory()                  /system
```






















