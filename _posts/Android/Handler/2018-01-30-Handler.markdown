---
layout: post
title:  "Handler"
date:   2018-01-30 17:10:00 +0800
categories: Android
tags: Handler
author: pepe
description: 『 Handler 』
---

### Handler构造方法一
```
    Handler handler = new Handler() {
        public void handleMessage(Message msg) {
            //do something
        };
    };
``` 
注意：

* 1、使用这种写法时，需要你在结束 `Activity` 的时候 `handler.removeCallbacksAndMessages(null);` 让系统能够正常进行回收操作。
* 2、也可以用 `static` 修饰 `handler` ，避免对 `activity` 的引用。


### Handler构造方法二
```
public abstract class MyWeakReferenceHandler<T extends Activity> extends Handler {  
  
    private WeakReference<T> weakReferenceActivity = null;  
  
    public MyWeakReferenceHandler(T t) {  
        this.weakReferenceActivity = new WeakReference<T>(t);  
    }  
  
    public abstract void handleMessage(Message msg, T weakReferenceActivity);  
  
    @Override  
    public void handleMessage(Message msg) {  
        // TODO Auto-generated method stub  
        super.handleMessage(msg);  
        handleMessage(msg, weakReferenceActivity.get());  
    }  
}  
```
这样在`Activity`结束回收的时候`WeakReference`不会阻止系统进行回收操作，能有效的避免因为`handler`引起的内存泄露风险。

### Message

Message是容纳任意数据的容器。生产线程发送消息给 Handler，Handler 将消息加入到消息队列中。消息提供了三种额外的信息，以供 Handler 和消息队列处理时使用：

* 1、what ——一种标识符，Handler 能使用它来区分不同消息，从而采取不同的处理方法
* 2、time ——告知消息队列何时处理消息
* 3、target —— 表示哪一个 Handler 应当处理消息
* 4、callback —— msg自带的回调
* 5、data[bundle] —— 携带的数据
* 6、obj/arg1/arg2 —— 携带的数据

### Handler发送消息



参考：

[Android Handler机制1之Thread - 简书](https://www.jianshu.com/p/3d8f7ec1017a)

[Android源码研究——Handler机制 - 文集 - 简书](https://www.jianshu.com/nb/21173643)

[Android Handler的使用方式和注意事项 - CSDN博客](https://blog.csdn.net/u010177022/article/details/63278070)

其他：

[对于Java静态内部类的理解 - 风生水起 - 博客园](https://www.cnblogs.com/end/archive/2012/12/21/2827672.html)

[一文然你对实例部类与静态内部类有更深的了解 - minghai - 博客园](https://www.cnblogs.com/minghaiJ/p/11384605.html)

[静态内部类-以及它的线程安全问题_y41992910的博客-CSDN博客_java静态内部类线程安全](https://blog.csdn.net/y41992910/article/details/89705269)

[ThreadLocal线程本地变量的超详细解析_zxysshgood的博客-CSDN博客_本地线程](https://blog.csdn.net/zxysshgood/article/details/78872907?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase)

[深入源码理解ThreadLocal和ThreadLocalMap - Y先森0.0 - 博客园](https://www.cnblogs.com/yinbiao/p/10728909.html)

[Android Handler 异步消息处理机制的妙用 创建强大的图片加载类 - CSDN博客](https://blog.csdn.net/lmj623565791/article/details/38476887)

///////////////////////

[消息机制:Handler源码解析 - verymrq的博客 - CSDN博客](https://blog.csdn.net/verymrq/article/details/78681901)

[Handler与Thread的关系 - ErQi](http://erqi.github.io/2016/08/31/handler%E5%92%8CThread%E7%9A%84%E5%85%B3%E7%B3%BB/)

[Android 异步消息处理机制 让你深入理解 Looper、Handler、Message三者关系 - Hongyang - CSDN博客](https://blog.csdn.net/lmj623565791/article/details/38377229)

[Android 为什么主线程的looper 一直循环不会ANR - 简书](https://www.jianshu.com/p/a848b5ab96ce)

[Android的Handler机制详解3_Looper.looper()不会卡死主线程 - 十一月Siy - CSDN博客](https://blog.csdn.net/baidu_34012226/article/details/80469036)

[Android中为什么主线程不会因为Looper.loop()里的死循环卡死？ - nbalichaoq的专栏 - CSDN博客](https://blog.csdn.net/nbalichaoq/article/details/51967753)

[Android中为什么主线程不会因为Looper.loop()的死循环卡死？ - 简书](https://www.jianshu.com/p/733b1cc9b457)

[我所理解的Handler - 简书](https://www.jianshu.com/p/a3b5a5b33e0a?utm_campaign=haruki&utm_content=note&utm_medium=reader_share&utm_source=weixin&from=groupmessage&isappinstalled=0&scene=1&clicktime=1578302619&enterid=1578302619)

[ThreadLocal，一篇文章就够了](https://mp.weixin.qq.com/s/MxhbLVNKPgyVreLeCY0ZPg)

[Android Handler：图文解析 Handler通信机制 的工作原理 - 简书](https://www.jianshu.com/p/f0b23ee5a922?utm_campaign=haruki&utm_content=note&utm_medium=reader_share&utm_source=weixin&from=groupmessage&isappinstalled=0)

Looper.loop 为什么不会阻塞掉 UI 线程？来，我们从源码里面找到答案
https://mp.weixin.qq.com/s/kGlZzhzRTRmK5XdW2pEqeQ

Handler的智慧,从终极问题出发 - 掘金
https://juejin.im/post/5b2715c2f265da5959468781

