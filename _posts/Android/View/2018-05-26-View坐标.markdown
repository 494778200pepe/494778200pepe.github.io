---
layout: post
title:  "View坐标"
date:   2018-05-26 14:01:10 +0800
categories: Android
tags: 自定义View
author: pepe
description: 『 View坐标 』
---


### **自身View - 父View**
* `View.getTop()`:子View的                   顶部到父View顶部的距离
* `View.getRight()`:子View的                 右边界到父View的左边界的距离
* `View.getBottom()`:子View的                底部到父View的顶部的距离
* `View.getLeft()`:子View的                  左边界到父View的左边界的距离

> 这四个方法获取的坐标表示的是『View控件』相对于父容器的`「原始位置信息」`，主要是父控件在layout子View时设置，子View在onLayout时使用。对View进行平移操作并不会改变着四个方法的返回值。

### **自身View**
* `View.getWidth()`:表示的是当前控件的宽度，即`View.getWidth() = getRight()-getLeft()`
* `View.getHeight()`：表示的是当前控件的高度，即`View.getHeight() = getBottom()-getTop()`

> 注意：View在平移过程中，top和left表示的是原始左上角的位置信息，其值并不会发生改变。

### **自身View**
* `View.getScrollX()`: mScrollX 的值总等于 『View控件左边缘』 和 『View内容左边缘』 在水平方向上的距离。
* `View.getScrollY()`: mScrollY 的值总等于 『View控件上边缘』 和 『View内容上边缘』 在垂直方向上的距离。

```
public final int getScrollX() {  
    return mScrollX;  
}  

public final int getScrollY() {  
    return mScrollY;  
}  
```
> Android并没有提供『View内容』的坐标信息接口，所以`View.getScrollX()`间接的表示了『View内容』的坐标信息。

### **触摸点 - 屏幕**
* `event.getRawX`:表示的是触摸点距离          屏幕左边界的距离
* `event.getRawY`:表示的是触摸点距离          屏幕上边界的距离

### **触摸点 - 自身**
* `event.getX()`:表示的是触摸的点距离         自身左边界的距离
* `event.getY()`:表示的是触摸的点距离         自身上边界的距离

> 这里的自身是指`『View控件』，scrollTo和scrollBy，改变的是『View内容』，对event.getX()和event.getY()无影响，event.getX()和event.getRawX()`相同。`如果用属性动画，改变了『View控件』 的「实时位置信息和偏移值」`，那么`event.getX()`和`event.getRawX()`就不相同了。

### **`View.getMeasuredWidth()`和`View.getWidth()`的区别**：
* ①`View.getMeasuredWidth()`:获得的值是`setMeasuredDimension`方法设置的值，它的值在`measure()`运行后就会确定
* ②`View.getWidth()`:获得是是`layout()`中传递的四个参数中的`mRight - mLeft`，它的值在`layot()`后确定
* ③一般情况下，在`onLayout()`中使用`getMeasuredWidth()`,在除`onLayout()`之外的地方使用g`etWidth()`。

### **view相对于自身 - 偏移**
* `View.getTranslationX()`:计算的是该『View控件』在X轴的偏移量。初始值为0，向左偏移值为负，向右偏移值为正。 可以通过执行属性动画来使偏移。
* `View.getTranslationY()`:计算的是该『View控件』在Y轴的偏移量。初始值为0，向上偏移为负，向下偏移为证。

> 系统点击事件的范围判断是根据translationX和translationY来判断的，而不是通过mTop。所以属性动画改变了translationX和translationY，也就改变了点击事件的范围。


### **view相对于父View - 偏移**
* `View.getX()`:子View相对于父View在X轴上的实时偏移值。`getX() = getLeft() + getTranslationX();`
* `View.getY()`:子View相对于父View在y轴上的实时偏移值。`getY() = getTop() + getTranslationY();`

```
public float getY() {
    return mTop + getTranslationY();
}

public void setY(float y) {
    setTranslationY(y - mTop);
}
```

> View根本就没有x、y的成员变量，不过是根据translationY和mTop的值计算出来的而已。

> 注意：『View控件』在平移过程中，top和left表示的是原始左上角的`「原始位置信息」`，其值并不会发生改变，此时发生改变的是`x、y、translationX、translationY`这四个参数。因为`view.getX()`和`view.getY()`，还有`translationX、translationY`，表示的应该是『View控件』 的`「实时位置信息和偏移值」`。而`view.getTop()`和`view.getLeft()`则表示的是『View控件』的`「原始位置信息」`。



参考：

[View的getLeft()、getTranslationX()和getX()的区别 - CSDN博客](https://blog.csdn.net/cc_lova_wxf/article/details/72676830)

[view.getX和view.getTranslationX区别 - CSDN博客](https://blog.csdn.net/chdjj/article/details/42293753)

[Android开发之getX，getRawX,getWidth,getTranslationX等的区别 - dmk877的专栏 - CSDN博客](http://blog.csdn.net/dmk877/article/details/51550031)

[Android开发之getMeasuredWidth和getWidth区别从源码分析 - CSDN博客](http://blog.csdn.net/dmk877/article/details/49734869)

