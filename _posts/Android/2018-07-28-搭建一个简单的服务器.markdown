---
layout: post
title:  "搭建一个简单的服务器"
date:   2018-07-28 14:28:00 +0800
categories: Android
tags: Android
author: pepe
description: 『 搭建一个简单的服务器 』
---

### **第一步：启用IIS功能**

`IIS`，全称`Internet Information Service`，即Internet信息服务，专用于微软操作系统平台。

找到`控制面板` -> `启用或关闭Window功能` -> `勾选 Internet Infomation Service`

![step1]({{ site.baseurl }}/assets/images/android/easy-server/step1.png)

开启IIS之后，就可以通过`http://localhost/`来访问电脑上的网页了。

制作一部简单的`html`文件，比如：
```
<html>
	<head><title>google一下，你就知道</title>  </head>
<body> 
	<a name="ttt"></a>
	<!--这是游戏列表（注释）-->
	<font size="20" color="#FFCC33">我是goole </font>
	<hr/></br>我是壁虎
	<hr/>
	<dl>
		<dt><font color="green">游戏名称</font></dt>
		<dd>魔兽争霸<tdd>
		<dd>星际争霸</dd>
	</dl>
	
	<ol type="a">
			<font color="red"><li>我是有序列表标签</li></font>
			<li>我是有序列表标签</li>
			<li>我是有序列表标签</li>
	
	</ol></br>
	<font color="blue"><ul>
			<li>我是无序列表标签</li>
			<li>font加在body外面也可以</li>
			<li>我是无序列表标签</li>
	
	</ul></font></br>
	<table border="2"  bgcolor="green" bordercolor="red" cellSpacing="5" cellPadding="4px" width=300 height=10>
		<tr><td width="40px" colspan="2" align="center" height="10px">个人信息</td></tr>
		<tr><td width="20px">姓名</td><td width="20px">年龄</td></tr>
		<tr><td rowspan="2">张三</td><td>18</td></tr>
		<tr><td>20</td></tr>
	</table>
	<a href="http://www.baidu.com" target="_blank">打开百度</a>
	</br>
	<a href="E:\\1.png">打开本地图片</a>
	</br>
	<a href="index1.html">打开网页</a>
	

	</br>	
	<!--<form action="http://www.baidu.com" method="post">-->
	<form  method="get">
	
	<a href="#top">回到top</a>
	</br><a href="#ttt">回到ttt的位置</a>
	</br>
	<!--文本框-->
	<Input type="text" name="username" value="请输入账号"/></br>
	<!--密码框-->
	<Input type="password" name="password" /></br>
	<!--复选框-->
	<Input type="checkbox" name="xingqu" value="dushu"/>读书<Input type="checkbox" value="lvxing"/>旅行</br>
	<!--单选框-->
	<Input type="radio" name="n"/>男<Input type="radio" name="n"/>女
	<!--选择框-->
	<select name="学历">
	<option value="小学">小学</option>
	<option value="初中">初中</option>
	<option value="高中">高中</option>
	<option value="大学">大学</option>
	</select></br>
	<!--普通按钮-->
	<button onclick="alert('你好')"/>haha</button></br>
	<!--提交表单的信息至服务器,从form到form-->
	<input type="submit" value="提交"/></br>
	<!--重置按钮-->
	<input type="reset" value="重置"/></br>
	<!--多行文本输入-->
	<textarea rows="5">你好</textarea></br>
	<input type="hidden" name="teacher" value="壁虎"/>
	</form>
	</br>
	<marquee dirction="right" onMouseOver="this.stop()" onMouseOut="this.start()">你好</marquee>

	<hr/></br>
	<!--image src="E:\\1.png-->
	<!--title实现图面上面文字悬浮-->
	<img src="E:\\1.png" title="I'm mourinho"/>
	</br>
	<a name="top"></a>
	

</bady>
</html>
```

将文件放在默认的路径下（`C:\Inetpub\wwwroot`），文件名使用`index.html`。

默认打开的文件名有以下几个：

![step2]({{ site.baseurl }}/assets/images/android/easy-server/step2.png)

进入该页面的方式为(以win10为例)：`控制面板`->`系统和安全`->`管理工具`->`Internet Information Services (IIS)管理器`->`网站`->`Default Web Site`->`默认文档`。

[Windows7下IIS7的安装及ASP配置方法 - CSDN博客](https://blog.csdn.net/q107770540/article/details/5261653)

这样，我们就搭建起来了一个简单的服务器。在局域网里其他的电脑上输入：`http://192.168.100.100`（这个ip是我的电脑的ip，根据需要修改） 就可以访问我们提供的页面了。如果转到公网上，全世界的人都可以访问到了。

### **第二步：安装Tomcat 和 Eclipse**

* Tomcat下载：[Tomcat Downloads](https://tomcat.apache.org/download-70.cgi)，我使用的版本是：`apache-tomcat-7.0.90`。 
![step3]({{ site.baseurl }}/assets/images/android/easy-server/step3.png)
* Eclipse下载：[Eclipse Downloads](http://www.eclipse.org/downloads/packages/release/Kepler/SR2)，我使用的版本是： `eclipse-jee-kepler-SR2-win32-x86_64.zip`。
![step4]({{ site.baseurl }}/assets/images/android/easy-server/step4.png)


### **第三步：创建web project工程**

* 运行`Eclipse`
* `File`->`New`->`Dynamic Web Project`，创建动态WebProject
* 建立一个类，继承`HttpServlet`，实现`doGet()、doPost()`，代码如下：
```
package servlet.study;

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class ServletDemo
 */
public class ServletDemo extends HttpServlet {
    private static final long serialVersionUID = 1L;

    private String name = "";
    private String password = "";
    /**
     * Default constructor. 
     */
    public ServletDemo() {
        System.out.println("log: ServletDemo enter");
    }

    /**
     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        String url=request.getRequestURL().toString();
        System.out.println("log: ServletDemo doGet: url="+url);

        String strName = request.getParameter("name");
        String strPassword = request.getParameter("password");
        System.out.println("log: ServletDemo doGet: name="+strName+": password="+strPassword);      
        boolean isPass = false;

        if(url!=null && url.contains("login")){         
            try{
                if((strName!=null)&&(strPassword!=null)){
                    if(name.contentEquals(strName) && password.contentEquals(strPassword) ){
                        isPass = true;
                    }
                }
            } catch (Exception e){
                e.printStackTrace();
            }
        }

        //返回json
        response.setContentType("text/json");
        PrintWriter out = response.getWriter();
        if(isPass){
            out.println("{\"result\":\"success\"}");
        } else {
            out.println("{\"result\":\"input info is invalid\"}");
        }           
        out.flush();
        out.close();                
    }

    /**
     * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        System.out.println("log: ServletDemo doPost:");     
        response.setContentType("text/json");
        PrintWriter out = response.getWriter();        
        String url=request.getRequestURL().toString();
        System.out.println("log: ServletDemo doPost: url="+url);     

        try{
            name = request.getParameter("name");
            password = request.getParameter("password");
            System.out.println("log: ServletDemo doPost: name="+name+": password="+password);
            if(url!=null && url.contains("register")){
                out.println("{\"result\":\"success\"}");
            } else {
                out.println("{\"result\":\"fail\"}");
            }
        } catch (Exception e){          
            out.println("{\"result\":\"fail\"}");
        }
    }
}
```
* 此时很可能会报错，是因为没有导入`servlet`的jar包
* 在`C:\install\other\tomcat\apache-tomcat-7.0.90\lib\`里面找到`servlet-api.jar`
* `项目名–> 右键->Property–> 选择 ->Java Build Path–> 选择 ->Add External JARs–> 选择 ->把servlet-api.jar 的路径输入`
* 在`WebTest`->`WebContent`->`WEB-INF`下，创建`web.xml`
* 在`web.xml`中配置`servlet`和`servlet-mapping`：
```
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>WebTest</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <servlet>
    <description>my J2EE deom for servlet</description>
    <display-name>disp ServletDemo</display-name>
    <servlet-name>ServletDemo</servlet-name>
    <servlet-class>servlet.study.ServletDemo</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ServletDemo</servlet-name>
    <url-pattern>/api/login</url-pattern>
    <url-pattern>/api/register</url-pattern>
  </servlet-mapping>
</web-app>
```
* `Run on Server`，出现`doGet`调用信息（是eclipse环境运行，执行了一次默认请求）
```
log: ServletDemo doGet: url=http://localhost:8080/WebTest/api/login
log: ServletDemo doGet: name=null: password=null
```
![step5]({{ site.baseurl }}/assets/images/android/easy-server/step5.png)


参考：

[搭建一个简单的服务器 - CSDN博客](https://blog.csdn.net/lintax/article/details/63686260)




