---
layout: post
title:  "Linux脚本基本语法"
date:   2018-03-23 19:24:00 +0800
categories: Linux
tags: Linux
author: pepe
description: 『 Linux脚本基本语法 』
---

### 远程拷贝命令
```
scp
// scp -r [本地文件夹] [[user@]host1:]file1  [[user@]host2:]file2
rsync
```

### **打印log**
```
    logcat -v time  >> ${STORAGE_PATH}log.tx
```

### **=/!=**    
    
* -eq 等于               equal
* -ne 不等于             not equal
* -gt 大于               greater than
* -ge 大于等于           greater equal
* -lt 小于               less than
* -le 小于等于           less equal

### **条件测试**     
   通常用” [ ] “来表示条件测试。注意这里的空格很重要。要确保方括号的空格。
    [ -f “somefile” ] ：判断是否是一个文件
    [ -x “/bin/ls” ] ：判断/bin/ls是否存在并有可执行权限
    [ -n “$var” ] ：判断$var变量是否有值
    [ “$a” = “$b” ] ：判断$a和$b是否相等
    
### **if语句** 
```
    #!/bin/bash

    echo "Please input your math grades"
    read grades

    if [ $grades -gt 100 ] || [ $grades -lt 0 ];then
    echo "Please input the number range in 0 - 100"
    fi

    if [ $grades -ge 90 ] && [ $grades -le 100 ];then
    echo "Your grade is excellent."
    elif [ $grades -ge 80 ] && [ $grades -le 89 ];then
    echo "Your grade is good."
    elif [ $grades -ge 70 ] && [ $grades -le 79 ];then
    echo "Your grade is middle."
    elif [ $grades -ge 60 ] && [ $grades -le 69 ];then
    echo "Your grade is passing."
    else
    echo "Your grade is badly."
    fi
```  

### **case语句**  
```  
    #!/bin/bash

    echo "Please input a command"
    read cmd
    case $cmd in
    cpu)    echo "The cpu information is"
            cat  /proc/cpuinfo;;
    mem)    echo "The mem information is"
            cat /proc/meminfo;;
    device) echo "The device information is"
            cat /proc/scsi/device_info;;
    CD-ROM) echo "The CD-ROM information is"
            cat /proc/sys/dev/cdrom/info;;
    *)      echo "Your input command is invalid"
    esac
```  

### **while语句** 
while语句是只要条件为真就执行下面语句。
``` 
    #!/bin/bash

    i=$1
    while [ $i -gt 0 ]
    do
    echo $i
    ((i--))
    done
``` 

### **until语句** 
until语句是只要条件为假就执行下列语句 
``` 
    #!/bin/bash

    i=$1
    until [ $i -le 0 ]
    do
    echo $i
    ((i--))
    done
``` 

### **for语句** 

    格式： 
    for 变量 in 列表 
    do 
    语句 
    done

```     
    #!/bin/bash


    for i in `seq 2 8` #seq是一个命令，顺序生成一串数字或者字符
    do
        echo $i
    done
``` 

### **shell函数**
    格式： 
    [function] funcName() 
    { 
        语句 
        [return 返回值] 
    } 
    返回值是可选的，如果没有显示return 则默认返回最后一条语句执行的结果。
    Shell 函数返回值只能是整数，一般用来表示函数执行成功与否，0表示成功，其他值表示失败。如果 return 其他数据，比如一个字符串，往往会得到错误提示：“numeric argument required”。

### **设置脚本执行程序**

    告诉系统要用这个解析器
    程序必须以下面的行开始（必须方在文件的第一行）：
    #!/bin/sh
    符号#!用来告诉系统它后面的参数是用来执行该文件的程序。在这个例子中我们使用/bin/sh来执行程序。
    安卓屏第一行是：#!/system/bin/sh
    
### **获取存储路径**
    #存储根路径，主要用于兼容SD卡和U盘（带最后的/号）
    STORAGE_PATH=${1}


   

参考：

[linux中的sh脚本语法](http://tsov.net/sh-script-syntax/)

[shell脚本基本语法详解 - CSDN博客](https://blog.csdn.net/qq_18297675/article/details/52693464)

[如何使用Linux重定向符 - CSDN博客](https://blog.csdn.net/qq_18297675/article/details/52578966)

[Linux下的dialog工具 使用方法 - CSDN博客](https://blog.csdn.net/shenwanjiang111/article/details/42047901)

[_ACME_的博客 - CSDN博客](https://blog.csdn.net/qq_18297675/article/category/6420863)

[Shell 变量 - 菜鸟教程](http://www.runoob.com/linux/linux-shell-variable.html)

[sync命令_Linux sync 命令用法详解：用于强制被改变的内容立刻写入磁盘](http://man.linuxde.net/sync)

[Linux基础知识之挂载详解（mount,umount及开机自动挂载](https://www.linuxidc.com/Linux/2016-08/134666.htm)


10套高质量Linux教程，放在百度网盘了 - CSDN博客
https://blog.csdn.net/xiaoye142034/article/details/79177098

Linux免费教程及免费书籍的解压密码为本站网址↓

www.linuxprobe.com

或

bbs.linuxprobe.com


