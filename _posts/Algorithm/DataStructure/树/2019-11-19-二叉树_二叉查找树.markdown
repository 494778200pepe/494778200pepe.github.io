---
layout: post
title:  "二叉树_二叉查找树"
date:   2019-11-19 10:04:00 +0800
categories: Algorithm
tags: DataStructure
author: pepe
description: 『 二叉查找树 』
---

**二叉查找树要求，在树中的任意一个节点，其左子树中的 每个节点的值，都要小于这个节点的值，而右子树节点的值都大于这个节点的值。**

二叉搜索树特点

* 左右子树也分别是二叉搜索树。

* 左子树的所有节点 key 值都小于它的根节点的 key 值。

* 右子树的所有节点 key 值都大于他的根节点的 key 值。

* 二叉搜索树可以为一棵空树。

* 一般来说，树中的每个节点的 key 值都不相等，但根据需要也可以将相同的 key 值插入树中。


### **插入操作**

### **查找操作**

### **删除操作**

二叉查找树的查找、插入操作都比较简单易懂，但是它的删除操作就比较复杂了 。针对要删除节点的子节点个数的不同，我们需要分三种情况来处理。

* 第一种情况是，如果要删除的节点没有子节点，我们只需要直接将父节点中，指向要删除节点的指针置为 null。比如图中的删除节点 55。 

* 第二种情况是，如果要删除的节点只有一个子节点（只有左子节点或者右子节点），我们只需要 更新父节点中，指向要删除节点的指针，让它指向要删除节点的子节点就可以了。比如图中的删除节点 13。 

* 第三种情况是，如果要删除的节点有两个子节点，这就比较复杂了。我们需要找到这个节点的右子树中的最小节点，把它替换到要删除的节点上。然后再删除掉这个最小节点，因为最小节点肯 定没有左子节点（如果有左子结点，那就不是最小节点了），所以，我们可以应用上面两条规则 来删除这个最小节点。比如图中的删除节点 18。

![BinaryTree6]({{ site.baseurl }}/assets/images/Algorithm/tree/BinaryTree6.png)

### **二叉查找树的其他操作**

除了插入、删除、查找操作之外，二叉查找树中还可以支持**快速地查找最大节点和最小节点、前驱节点和后继节点。**






参考：

[看图轻松理解数据结构与算法系列(二叉搜索树) - 掘金](https://juejin.im/post/5b60fd59f265da0f8d3675c5)



































